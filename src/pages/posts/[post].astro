---
import { render } from 'astro:content';
import { getAllPostsSorted } from '../../posts';
import Layout from '../../layouts/Layout.astro';
import Section from '../../components/Section.astro';
import FormattedDate from '../../components/FormattedDate.astro';
import Thoughts from '../../components/Thoughts';

export const prerender = true;

export async function getStaticPaths() {
  const posts = await getAllPostsSorted();
  return posts.map((post) => ({
    params: { post: post.id  },
    props: { post },
  }));
};

const { post } = Astro.props;
const { Content } = await render(post)
---

<Layout>
  <div class="wrapper">
    <a href="/blog">all posts</a>
    <section class="post" style="--order: 1">
      <header>
        <h1>{post.data.title}</h1>
        {post.data.pubDate && <FormattedDate date={post.data.pubDate} />}
        <p>{post.data.description}</p>
      </header>
      <div class="markdown">
        <Content />
      </div>
    </section>
    <Section title="thoughts?" style="--order: 2">
      <a href={`/post-thought/${post.id}`}>add a thought</a>
      <Thoughts client:only post={post.id} />
    </Section>
  </div>
</Layout>

<style>
  .wrapper {
    margin: auto;
    display: flex;
    flex-direction: column;
    gap: 32px;
  }
  
  header h1 {
    font-size: 1.75rem;
    margin-bottom: 6px;
  }

  header p {
    margin-top: 6px;
  }

  .post {
    margin-bottom: 24px;
  }

  section header {
    margin-bottom: 48px;
  }

  .markdown {
    font-size: 1rem;
    max-width: 65ch;
    line-height: 1.7;
    overflow-wrap: break-word;
  }

  .markdown :global(h2),
  .markdown :global(h3),
  .markdown :global(h4) {
    margin-top: 48px;
    margin-bottom: 16px;
    line-height: 1.25;
  }

  .markdown :global(h2) {
    font-size: 1.75rem;
    font-weight: 600;
  }

  .markdown :global(h3) {
    font-size: 1.5rem;
    font-weight: 600;
  }

  .markdown :global(h4) {
    font-size: 1.25rem;
    font-weight: 600;
  }

  .markdown :global(p),
  .markdown :global(ol),
  .markdown :global(ul),
  .markdown :global(blockquote),
  .markdown :global(table),
  .markdown :global(pre),
  .markdown :global(details) {
    margin-top: 0;
    margin-bottom: 1.25em;
  }

  .markdown :global(ul),
  .markdown :global(ol) {
    padding-left: 2em;
    list-style-type: revert !important;
  }

  .markdown :global(blockquote) {
    border-left: 0.25em solid rgb(var(--outline));
    padding: 0.5rem 1rem;
    margin: 0;
    margin-bottom: 1rem;
  }

  .markdown :global(pre) {
    border-radius: var(--rounded-base);
    padding: 16px 32px;
  }

  .markdown :global(p code),
  .markdown :global(ol code),
  .markdown :global(ul code) {
    font-family: var(--monospace);
    padding: 2px 6px;
    margin: 1px -1px;
    position: relative;
    display: inline;
    background-color: rgb(var(--surface-high));
    border-radius: 3px;
  }

  .markdown :global(:last-child) {
    margin-bottom: 0;
  }
</style>